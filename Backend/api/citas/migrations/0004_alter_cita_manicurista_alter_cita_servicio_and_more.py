# Generated by Django 5.2 on 2025-09-23 09:04

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('citas', '0003_initial'),
        ('manicuristas', '0002_initial'),
        ('servicios', '0001_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='cita',
            name='manicurista',
            field=models.ForeignKey(blank=True, help_text='Manicurista principal (para compatibilidad)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='citas_principal', to='manicuristas.manicurista', verbose_name='Manicurista Principal'),
        ),
        migrations.AlterField(
            model_name='cita',
            name='servicio',
            field=models.ForeignKey(blank=True, help_text='Servicio principal (para compatibilidad)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='citas_principal', to='servicios.servicio', verbose_name='Servicio Principal'),
        ),
        # Limpiar posibles tablas previas (auto M2M antigua y restos de intentos fallidos)
        migrations.RunSQL(
            sql=(
                "DROP TABLE IF EXISTS `citas_cita_servicios`;"  # posible tabla auto-m2m por nombre legacy
                "DROP TABLE IF EXISTS `citas_citamanicurista`;"
                "DROP TABLE IF EXISTS `citas_citaservicio`;"
            ),
            reverse_sql=migrations.RunSQL.noop,
        ),
        # Reemplazar el antiguo ManyToMany 'servicios' (si existía sin through) solo a nivel de estado
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.RemoveField(
                    model_name='cita',
                    name='servicios',
                ),
            ],
            database_operations=[],
        ),
        migrations.CreateModel(
            name='CitaManicurista',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('es_principal', models.BooleanField(default=False, help_text='Manicurista principal de la cita')),
                ('orden', models.PositiveIntegerField(default=1, help_text='Orden de participación')),
                ('cita', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manicuristas_cita', to='citas.cita')),
                ('manicurista', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manicuristas.manicurista')),
            ],
            options={
                'verbose_name': 'Manicurista de Cita',
                'verbose_name_plural': 'Manicuristas de Cita',
                'ordering': ['orden', 'manicurista__nombre'],
                'unique_together': {('cita', 'manicurista')},
            },
        ),
        migrations.AddField(
            model_name='cita',
            name='manicuristas',
            field=models.ManyToManyField(help_text='Manicuristas asignadas a la cita', related_name='citas_asignadas', through='citas.CitaManicurista', to='manicuristas.manicurista', verbose_name='Manicuristas'),
        ),
        migrations.CreateModel(
            name='CitaServicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.PositiveIntegerField(default=1)),
                ('precio_unitario', models.DecimalField(decimal_places=2, max_digits=10)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('orden', models.PositiveIntegerField(default=1, help_text='Orden de ejecución del servicio')),
                ('cita', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servicios_cita', to='citas.cita')),
                ('servicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='servicios.servicio')),
            ],
            options={
                'verbose_name': 'Servicio de Cita',
                'verbose_name_plural': 'Servicios de Cita',
                'ordering': ['orden', 'servicio__nombre'],
                'unique_together': {('cita', 'servicio')},
            },
        ),
        migrations.AddField(
            model_name='cita',
            name='servicios',
            field=models.ManyToManyField(help_text='Servicios incluidos en la cita', related_name='citas_incluidas', through='citas.CitaServicio', to='servicios.servicio', verbose_name='Servicios'),
        ),
    ]
